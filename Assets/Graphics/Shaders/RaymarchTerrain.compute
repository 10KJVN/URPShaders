#pragma kernel CSMain
#include "Includes/SDFFunctions2.hlsl"

RWTexture2D<float4> Result; // Output for writing ray marching results

// Camera parameters (set from C#)
float3 _CameraPosition;
float3 _CameraForward;
float3 _CameraRight;
float3 _CameraUp;
float _AspectRatio;

// Thread group size (nr. of threads per group)
[numthreads(8,8,1)] 
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint width, height;
    Result.GetDimensions(width, height);
    
    // Get normalized screen-space coordinates
    float2 uv = (float2(id.xy) / float2(width, height)) * 2.0 - 1.0;
    uv.x *= _AspectRatio; // Adjust for aspect ratio

    // Compute ray direction from camera
    float3 rayDir = normalize(_CameraForward + uv.x * _CameraRight + uv.y * _CameraUp);

    // Ray march to compute the distance to the terrain
    float distance = RaymarchTerrain(_CameraPosition, rayDir);

    // Set desert color based on the result
    float3 color = distance < 100.0 ? float3(1.0, 0.9, 0.6) : float3(0, 0, 0);

    // Write the final color to the output texture
    Result[id.xy] = float4(color, 1.0);
}
